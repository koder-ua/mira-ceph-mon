# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import stat_pb2 as stat__pb2


class SensorRPCStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCephStatus = channel.unary_unary(
        '/main.SensorRPC/GetCephStatus',
        request_serializer=stat__pb2.Empty.SerializeToString,
        response_deserializer=stat__pb2.CephStatus.FromString,
        )
    self.GetCephInfo = channel.unary_unary(
        '/main.SensorRPC/GetCephInfo',
        request_serializer=stat__pb2.ClusterName.SerializeToString,
        response_deserializer=stat__pb2.CephInfo.FromString,
        )
    self.SetupLatencyMonitoring = channel.unary_unary(
        '/main.SensorRPC/SetupLatencyMonitoring',
        request_serializer=stat__pb2.CephSettings.SerializeToString,
        response_deserializer=stat__pb2.Empty.FromString,
        )
    self.GetCephOpsLats = channel.unary_unary(
        '/main.SensorRPC/GetCephOpsLats',
        request_serializer=stat__pb2.Empty.SerializeToString,
        response_deserializer=stat__pb2.CephOpsLats.FromString,
        )
    self.StopLatencyMonitoring = channel.unary_unary(
        '/main.SensorRPC/StopLatencyMonitoring',
        request_serializer=stat__pb2.Empty.SerializeToString,
        response_deserializer=stat__pb2.Empty.FromString,
        )


class SensorRPCServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetCephStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCephInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetupLatencyMonitoring(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetCephOpsLats(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopLatencyMonitoring(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SensorRPCServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCephStatus': grpc.unary_unary_rpc_method_handler(
          servicer.GetCephStatus,
          request_deserializer=stat__pb2.Empty.FromString,
          response_serializer=stat__pb2.CephStatus.SerializeToString,
      ),
      'GetCephInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetCephInfo,
          request_deserializer=stat__pb2.ClusterName.FromString,
          response_serializer=stat__pb2.CephInfo.SerializeToString,
      ),
      'SetupLatencyMonitoring': grpc.unary_unary_rpc_method_handler(
          servicer.SetupLatencyMonitoring,
          request_deserializer=stat__pb2.CephSettings.FromString,
          response_serializer=stat__pb2.Empty.SerializeToString,
      ),
      'GetCephOpsLats': grpc.unary_unary_rpc_method_handler(
          servicer.GetCephOpsLats,
          request_deserializer=stat__pb2.Empty.FromString,
          response_serializer=stat__pb2.CephOpsLats.SerializeToString,
      ),
      'StopLatencyMonitoring': grpc.unary_unary_rpc_method_handler(
          servicer.StopLatencyMonitoring,
          request_deserializer=stat__pb2.Empty.FromString,
          response_serializer=stat__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'main.SensorRPC', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
